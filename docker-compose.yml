version: '3.8'

services:
  # PostgreSQL Database (production-ready)
  db:
    image: postgres:15-alpine
    container_name: aipower-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: aipower
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
      POSTGRES_DB: aipower
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aipower"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: aipower-api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://aipower:${DB_PASSWORD:-changeme}@db:5432/aipower?schema=public
      PORT: 3001
      NODE_ENV: production
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000}
      JWT_SECRET: ${JWT_SECRET:-change-this-in-production}
      SESSION_SECRET: ${SESSION_SECRET:-change-this-in-production}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      APP_URL: ${APP_URL:-http://localhost:3001}
      WEB_URL: ${WEB_URL:-http://localhost:3000}
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: aipower-web
    restart: unless-stopped
    depends_on:
      - api
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      NEXT_PUBLIC_APP_NAME: ${NEXT_PUBLIC_APP_NAME:-AI Power Mobile Tire Service}
      NODE_ENV: production
    ports:
      - "3000:3000"

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: aipower-network
